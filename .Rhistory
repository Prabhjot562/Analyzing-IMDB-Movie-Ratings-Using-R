install.packages(c("tidyverse", "ggplot2", "scales"))
library(readxl)
imdb_top_1000 <- read_excel("C:/Users/AsopaMG/Desktop/imdb_top_1000.xlsx")
View(imdb_top_1000)
library(tidyverse)
library(ggplot2)
library(scales)
movies_clean <- imdb_top_1000 %>%
na.omit() %>%
mutate(
Runtime = as.numeric(gsub(" min", "", Runtime)),
IMDB_Rating = as.numeric(IMDB_Rating),
Gross = as.numeric(gsub("[\\$M,]", "", Gross))
)
top_movies_plot <- movies_clean %>%
arrange(desc(IMDB_Rating)) %>%
head(20) %>%
ggplot(aes(x = reorder(Series_Title, IMDB_Rating), y = IMDB_Rating)) +
geom_bar(stat = "identity", fill = "skyblue") +
coord_flip() +
theme_minimal() +
labs(
title = "Top 20 Movies by IMDB Rating",
x = "Movie Title",
y = "IMDB Rating"
)
rating_dist_plot <- ggplot(movies_clean, aes(x = IMDB_Rating)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black") +
theme_minimal() +
labs(
title = "Distribution of IMDB Ratings",
x = "Rating",
y = "Number of Movies"
)
runtime_rating_plot <- ggplot(movies_clean, aes(x = Runtime, y = IMDB_Rating)) +
geom_point(alpha = 0.6, color = "blue") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(
title = "Movie Runtime vs IMDB Rating",
x = "Runtime (minutes)",
y = "IMDB Rating"
)
genre_analysis <- movies_clean %>%
separate_rows(Genre, sep = ", ") %>%
group_by(Genre) %>%
summarise(
count = n(),
avg_rating = mean(IMDB_Rating)
) %>%
arrange(desc(count))
genre_count_plot <- ggplot(head(genre_analysis, 10),
aes(x = reorder(Genre, count), y = count)) +
geom_bar(stat = "identity", fill = "skyblue") +
coord_flip() +
theme_minimal() +
labs(
title = "Top 10 Most Common Genres",
x = "Genre",
y = "Number of Movies"
)
geom_bar(fill = "skyblue") +
theme_minimal() +
labs(
title = "Number of Movies by Release Year",
x = "Release Year",
y = "Number of Movies"
)
geom_bar(fill = "skyblue") +
theme_minimal() +
labs(
title = "Number of Movies by Release Year",
x = "Release Year",
y = "Number of Movies"
)
install.packages(c("tidyverse", "ggplot2", "scales"))
library(tidyverse)
library(ggplot2)library(scales)
library(ggplot2)library(scales)
install.packages(c("tidyverse", "ggplot2", "scales"))
library(tidyverse)
library(ggplot2)
library(scales)
library(readxl)
imdb_top_1000 <- read_excel("C:/Users/AsopaMG/Desktop/imdb_top_1000.xlsx")
View(imdb_top_1000)
movies_clean <- imdb_top_1000 %>%
na.omit() %>%
mutate(
Runtime = as.numeric(gsub(" min", "", Runtime)),
IMDB_Rating = as.numeric(IMDB_Rating),
Gross = as.numeric(gsub("[\\$M,]", "", Gross))
)
top_movies_plot <- movies_clean %>%
arrange(desc(IMDB_Rating)) %>%
head(20) %>%
ggplot(aes(x = reorder(Series_Title, IMDB_Rating), y = IMDB_Rating)) +
geom_bar(stat = "identity", fill = "skyblue") +
coord_flip() +
theme_minimal() +
labs(
title = "Top 20 Movies by IMDB Rating",
x = "Movie Title",
y = "IMDB Rating"
)
print(top_movies_plot)
rating_dist_plot <- ggplot(movies_clean, aes(x = IMDB_Rating)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black") +
theme_minimal() +
labs(
title = "Distribution of IMDB Ratings",
x = "Rating",
y = "Number of Movies"
)
print(rating_dist_plot)
runtime_rating_plot <- ggplot(movies_clean, aes(x = Runtime, y = IMDB_Rating)) +
geom_point(alpha = 0.6, color = "blue") +
geom_smooth(method = "lm", color = "red") +
theme_minimal() +
labs(
title = "Movie Runtime vs IMDB Rating",
x = "Runtime (minutes)",
y = "IMDB Rating"
)
print(runtime_rating_plot)
genre_analysis <- movies_clean %>%
separate_rows(Genre, sep = ", ") %>%
group_by(Genre) %>%
summarise(
count = n(),
avg_rating = mean(IMDB_Rating)
) %>%
arrange(desc(count))
genre_count_plot <- ggplot(head(genre_analysis, 10),
aes(x = reorder(Genre, count), y = count)) +
geom_bar(stat = "identity", fill = "skyblue") +
coord_flip() +
theme_minimal() +
labs(
title = "Top 10 Most Common Genres",
x = "Genre",
y = "Number of Movies"
)
print(genre_count_plot)
year_analysis_plot <- ggplot(movies_clean, aes(x = Released_Year)) +
geom_bar(fill = "skyblue") +
theme_minimal() +
labs(
title = "Number of Movies by Release Year",
x = "Release Year",
y = "Number of Movies"
)
print(year_analysis_plot)
show_analysis <- function(data = movies_clean) {
# Statistics Section
cat("\n=== IMDB Movies Dataset Analysis ===\n\n")
# Basic Dataset Statistics
cat("Dataset Overview:\n")
cat("-------------------\n")
cat("Total number of movies:", nrow(data), "\n")
cat("Year range:", min(data$Released_Year), "to", max(data$Released_Year), "\n\n")
# Rating Statistics
cat("Rating Statistics:\n")
cat("-------------------\n")
cat("Average Rating:", round(mean(data$IMDB_Rating), 2), "\n")
cat("Median Rating:", round(median(data$IMDB_Rating), 2), "\n")
cat("Rating Range:", round(min(data$IMDB_Rating), 2), "to",
round(max(data$IMDB_Rating), 2), "\n\n")
# Runtime Statistics
cat("Runtime Statistics:\n")
cat("-------------------\n")
cat("Average Runtime:", round(mean(data$Runtime), 0), "minutes\n")
cat("Median Runtime:", round(median(data$Runtime), 0), "minutes\n")
cat("Runtime Range:", min(data$Runtime), "to", max(data$Runtime), "minutes\n\n")
# Top 5 Highest Rated Movies
cat("Top 5 Highest Rated Movies:\n")
cat("-------------------\n")
top_5 <- data %>%
arrange(desc(IMDB_Rating)) %>%
head(5)
print(data.frame(
Movie = top_5$Series_Title,
Rating = top_5$IMDB_Rating,
Year = top_5$Released_Year
))
cat("\n")
# Return the summary statistics invisibly
invisible(list(
total_movies = nrow(data),
avg_rating = mean(data$IMDB_Rating),
avg_runtime = mean(data$Runtime),
year_range = range(data$Released_Year),
top_5_movies = top_5
))
}
stats <- show_analysis()
View(genre_analysis)
